/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Entidad.ClsEntidadPortafolio;
import Entidad.ClsEntidadPortafolioMaterialDocente;
import Entidad.ClsEntidadPortafolioMaterialEstudiante;
import Negocio.ClsNegocioPortafolio;
import Negocio.ClsNegocioPortafolioMaterialDocente;
import Negocio.ClsNegocioPortafolioMaterialEstudiante;
import Negocio.ClsNegocioUsuario;
import static com.sun.org.apache.xpath.internal.axes.HasPositionalPredChecker.check;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import static sun.nio.ch.IOStatus.check;

/**
 *
 * @author Drei
 */
public class FrmPortafolio extends javax.swing.JInternalFrame {

    public String[] datoIFC = null;
    boolean guardarNuevo;
    boolean cabeceraGuardada = false;
    boolean guardadoF = false;
    boolean actualizaF = false;
    boolean calculadoPorcentajes = false;
    public String nivelUsuario;
    String idCargaAcademica;
    public String codDocente;
    
    String IdPortafolio = "";
    
    DefaultTableModel modelDocente = new DefaultTableModel(){
        @Override
        public Class<?> getColumnClass(int column){
            switch (column) {
                case 2:
                    return Boolean.class;
                case 1:
                    return Boolean.class;
                case 3:
                    return Integer.class;
                default:
                    return String.class;
            }
        }
    };
    
    DefaultTableModel modelEstudiante = new DefaultTableModel(){
        @Override
        public Class<?> getColumnClass(int column){
            switch (column) {
                case 2:
                    return Boolean.class;
                case 1:
                    return Boolean.class;
                case 3:
                    return Integer.class;
                default:
                    return String.class;
            }
        }
    };
    
    
    
    public FrmPortafolio(String[] datoRF, boolean guardarNuevo,String nivelusu,String codDocente) {
        initComponents();
        cargarDatosTablaDocente();
        cargarDatosTablaEstudiante();
        
        this.datoIFC = datoRF;
        this.guardarNuevo = guardarNuevo;
        this.nivelUsuario = nivelusu;
        this.codDocente = codDocente;
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDocente = new javax.swing.JTextField();
        txtCodigoCurso = new javax.swing.JTextField();
        txtNombreCurso = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNumMatriculados = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumRetirados = new javax.swing.JTextField();
        txtPorcenMatriculados = new javax.swing.JTextField();
        txtPorcenRetirados = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtNumAbandono = new javax.swing.JTextField();
        txtPorcenAbandono = new javax.swing.JTextField();
        txtNumAsisten = new javax.swing.JTextField();
        txtPorcenAsisten = new javax.swing.JTextField();
        txtNumAprobados = new javax.swing.JTextField();
        txtPorcenAprobados = new javax.swing.JTextField();
        txtPorcenDesaprobados = new javax.swing.JTextField();
        txtNumDesaprobados = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnCalcularPorcentajes = new javax.swing.JButton();
        lblSemestre = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnAceptarInforme = new javax.swing.JButton();
        btnRechazarInforme = new javax.swing.JButton();
        btnCancelarInforme = new javax.swing.JButton();
        btnGuardarInforme = new javax.swing.JButton();
        btnEnviarInforme = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDocente = new javax.swing.JTable();
        btnAgregarFilaCapacidades = new javax.swing.JButton();
        btnRemoverFilaCapacidades = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEstudiante = new javax.swing.JTable();
        btnAgregarFilaEstudiante = new javax.swing.JButton();
        btnRemoverFilaEstudiante = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        guardarDetalles = new javax.swing.JButton();
        btnCancelarInforme1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtRevisadoPor = new javax.swing.JTextField();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel4.setText("Nombre :");

        jLabel13.setText("Docente:");

        txtDocente.setEditable(false);
        txtDocente.setBackground(new java.awt.Color(248, 248, 248));
        txtDocente.setEnabled(false);

        txtCodigoCurso.setEditable(false);
        txtCodigoCurso.setBackground(new java.awt.Color(248, 248, 248));
        txtCodigoCurso.setEnabled(false);

        txtNombreCurso.setEditable(false);
        txtNombreCurso.setBackground(new java.awt.Color(248, 248, 248));
        txtNombreCurso.setEnabled(false);

        jLabel5.setText("CÃ³digo :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Resumen del curso para la Unidad :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Estudiantes");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Cantidad");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Porcentaje");

        jLabel7.setText("Matriculados");

        txtNumMatriculados.setBackground(new java.awt.Color(248, 248, 248));
        txtNumMatriculados.setEnabled(false);

        jLabel8.setText("Retirados");

        txtNumRetirados.setBackground(new java.awt.Color(248, 248, 248));
        txtNumRetirados.setEnabled(false);

        txtPorcenMatriculados.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenMatriculados.setEnabled(false);

        txtPorcenRetirados.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenRetirados.setEnabled(false);

        jLabel11.setText("Abandono");

        txtNumAbandono.setBackground(new java.awt.Color(248, 248, 248));
        txtNumAbandono.setEnabled(false);

        txtPorcenAbandono.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenAbandono.setEnabled(false);

        txtNumAsisten.setBackground(new java.awt.Color(245, 250, 255));

        txtPorcenAsisten.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenAsisten.setEnabled(false);

        txtNumAprobados.setBackground(new java.awt.Color(245, 250, 255));

        txtPorcenAprobados.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenAprobados.setEnabled(false);

        txtPorcenDesaprobados.setBackground(new java.awt.Color(248, 248, 248));
        txtPorcenDesaprobados.setEnabled(false);

        txtNumDesaprobados.setBackground(new java.awt.Color(245, 250, 255));

        jLabel16.setText("Asisten");

        jLabel17.setText("Aprobados");

        jLabel18.setText("Desaprobados");

        btnCalcularPorcentajes.setText("Calcular Porcentajes");
        btnCalcularPorcentajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularPorcentajesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(67, 67, 67)
                        .addComponent(jLabel15)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCalcularPorcentajes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel18))
                                        .addGap(115, 115, 115))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNumRetirados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtPorcenMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPorcenRetirados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtNumDesaprobados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(39, 39, 39)
                                            .addComponent(txtPorcenDesaprobados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtNumAsisten, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addComponent(txtPorcenAsisten, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtNumAbandono, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addComponent(txtPorcenAbandono, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtNumAprobados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addComponent(txtPorcenAprobados, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(63, 63, 63))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNumMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNumRetirados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenRetirados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtNumAbandono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenAbandono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumAsisten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenAsisten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumAprobados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenAprobados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumDesaprobados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcenDesaprobados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addComponent(btnCalcularPorcentajes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblSemestre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblSemestre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSemestre.setText("SEMESTRE");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PORTAFOLIO");

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 222)));

        btnAceptarInforme.setText("Aceptar");
        btnAceptarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarInformeActionPerformed(evt);
            }
        });

        btnRechazarInforme.setText("Rechazar");
        btnRechazarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechazarInformeActionPerformed(evt);
            }
        });

        btnCancelarInforme.setText("Salir");
        btnCancelarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarInformeActionPerformed(evt);
            }
        });

        btnGuardarInforme.setText("Guardar");
        btnGuardarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInformeActionPerformed(evt);
            }
        });

        btnEnviarInforme.setText("Enviar");
        btnEnviarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarInformeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnAceptarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnRechazarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGuardarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btnEnviarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptarInforme)
                    .addComponent(btnRechazarInforme)
                    .addComponent(btnCancelarInforme)
                    .addComponent(btnGuardarInforme)
                    .addComponent(btnEnviarInforme))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtCodigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtDocente)
                                    .addComponent(txtNombreCurso)))
                            .addComponent(lblSemestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSemestre)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Portafolio", jPanel3);

        tablaDocente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaDocente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaDocenteMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaDocente);

        btnAgregarFilaCapacidades.setText("Agregar fila");
        btnAgregarFilaCapacidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFilaCapacidadesActionPerformed(evt);
            }
        });

        btnRemoverFilaCapacidades.setText("Remover fila");
        btnRemoverFilaCapacidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverFilaCapacidadesActionPerformed(evt);
            }
        });

        jLabel2.setText("Material  que el docente prepara  y entrega a los estudiantes durante la ejecuciÃ³n de los cursos ");

        jLabel3.setText("Material  generado por el estudiante durante el transcurso del semestre :");

        tablaEstudiante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEstudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaEstudianteMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablaEstudiante);

        btnAgregarFilaEstudiante.setText("Agregar fila");
        btnAgregarFilaEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFilaEstudianteActionPerformed(evt);
            }
        });

        btnRemoverFilaEstudiante.setText("Remover fila");
        btnRemoverFilaEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverFilaEstudianteActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 77, 222)));

        guardarDetalles.setText("Guardar Detalles");
        guardarDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarDetallesActionPerformed(evt);
            }
        });

        btnCancelarInforme1.setText("Salir");
        btnCancelarInforme1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarInforme1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardarDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarInforme1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarDetalles)
                    .addComponent(btnCancelarInforme1))
                .addContainerGap())
        );

        jLabel6.setText("Revisador Por :");

        txtRevisadoPor.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtRevisadoPor)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnAgregarFilaEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoverFilaEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnAgregarFilaCapacidades, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoverFilaCapacidades, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 195, Short.MAX_VALUE)))
                        .addGap(19, 19, 19))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarFilaCapacidades)
                    .addComponent(btnRemoverFilaCapacidades))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarFilaEstudiante)
                    .addComponent(btnRemoverFilaEstudiante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRevisadoPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Material", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaDocenteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDocenteMousePressed
//        if (TablaCapacidades.getSelectedRow()!= -1) {
//            if (filaSeleccionada == -2 || filaRemovida == true) {
//                filaSeleccionada = TablaCapacidades.getSelectedRow();
//                txtComentario.setText(LogrosCapacidades.get(filaSeleccionada));
//                filaRemovida = false;
//            } else {
//                LogrosCapacidades.set(filaSeleccionada, txtComentario.getText());
//                filaSeleccionada = TablaCapacidades.getSelectedRow();
//                txtComentario.setText(LogrosCapacidades.get(filaSeleccionada));
//            }
//        }
    }//GEN-LAST:event_tablaDocenteMousePressed

    private void cargarDatosTablaDocente(){
        tablaDocente.setModel(modelDocente);
        modelDocente.addColumn("Material Docente Entregado");
        modelDocente.addColumn("Digital");
        modelDocente.addColumn("Impreso");
        modelDocente.addColumn("Cantidad");
        tablaDocente.getColumnModel().getColumn(0).setMinWidth(500);
        tablaDocente.getColumnModel().getColumn(0).setMaxWidth(500);
        tablaDocente.getColumnModel().getColumn(1).setMinWidth(10);
        tablaDocente.getColumnModel().getColumn(2).setMinWidth(10);
        tablaDocente.getColumnModel().getColumn(3).setMinWidth(20);
        modelDocente.addRow(new Object[]{"SÃ­labo del curso(Impreso y Digital)", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"CurrÃ­culum Vitae formato ABET", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Material del Curso (Texto, Diapositivas)", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"GuÃ­as de laboratorio y talleres", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Enunciado y resoluciÃ³n de exÃ¡menes", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Enunciado de las prÃ¡cticas o casos prÃ¡cticos", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Registro de Asistencia", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Registro de Notas", Boolean.FALSE,Boolean.FALSE,0});
        modelDocente.addRow(new Object[]{"Fichas de SustentaciÃ³n", Boolean.FALSE,Boolean.FALSE,0});
        tablaDocente.setRowHeight(25);
        
        
        
    }
    
    private void cargarDatosTablaEstudiante(){
        tablaEstudiante.setModel(modelEstudiante);
        modelEstudiante.addColumn("Material Entregado");
        modelEstudiante.addColumn("Digital");
        modelEstudiante.addColumn("Impreso");
        modelEstudiante.addColumn("Cantidad");
        tablaEstudiante.getColumnModel().getColumn(0).setMinWidth(500);
        tablaEstudiante.getColumnModel().getColumn(0).setMaxWidth(500);
        tablaEstudiante.getColumnModel().getColumn(1).setMinWidth(10);
        tablaEstudiante.getColumnModel().getColumn(2).setMinWidth(10);
        tablaEstudiante.getColumnModel().getColumn(3).setMinWidth(20);
        modelEstudiante.addRow(new Object[]{"Copias de cuadernos o apuntes de clases(Cursos que lo requieran) opcional", Boolean.FALSE,Boolean.FALSE,0});
        modelEstudiante.addRow(new Object[]{"Original de exÃ¡menes de unidad, ordenado por notas de mayor a menor", Boolean.FALSE,Boolean.FALSE,0});
        modelEstudiante.addRow(new Object[]{"Original de evaluaciones prÃ¡cticas(pruebas)", Boolean.FALSE,Boolean.FALSE,0});
        modelEstudiante.addRow(new Object[]{"Original de informes de laboratorios", Boolean.FALSE,Boolean.FALSE,0});
        modelEstudiante.addRow(new Object[]{"Copias de trabajos finales (proyectos del curso)", Boolean.FALSE,Boolean.FALSE,0});
        modelEstudiante.addRow(new Object[]{"Trabajos encargados (investigaciÃ³n, tareas, asignaciones)", Boolean.FALSE,Boolean.FALSE,0});        
        tablaEstudiante.setRowHeight(25);
    }
    
    private void btnAgregarFilaCapacidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFilaCapacidadesActionPerformed
        
        agregarFila();
    }//GEN-LAST:event_btnAgregarFilaCapacidadesActionPerformed

    private void btnRemoverFilaCapacidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverFilaCapacidadesActionPerformed
        
        removerFila();
    }//GEN-LAST:event_btnRemoverFilaCapacidadesActionPerformed

    private void btnGuardarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInformeActionPerformed
        if (calculadoPorcentajes) {
            if (guardarNuevo) {
                String opcion = "Guardado";
                guardarDatos(opcion);
                guardadoF = true;
                guardarNuevo = false;
                cabeceraGuardada = true;
            }
            else{
                /*actualizas*/
                String opcion = "Guardado";
                actualizarDatos(opcion);
                actualizaF = true;
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Revise los porcentajes");
        }
    }//GEN-LAST:event_btnGuardarInformeActionPerformed

    private void actualizarDatos(String opcion){
        ClsEntidadPortafolio entiPortafolio = new ClsEntidadPortafolio();
        ClsNegocioPortafolio negoPortafolio = new ClsNegocioPortafolio();
            
        try {            
            entiPortafolio.setEstudianteAsisten(Integer.parseInt(txtNumAsisten.getText()));
            entiPortafolio.setEstudianteAprobado(Integer.parseInt(txtNumAprobados.getText()));
            entiPortafolio.setEstudianteDesaprobado(Integer.parseInt(txtNumDesaprobados.getText()));
            entiPortafolio.setEstadoPortafolio(opcion);
            
            negoPortafolio.ModificarPortafolio(IdPortafolio, entiPortafolio);
            negoPortafolio.cst.close();
            negoPortafolio.conexion.close();
            JOptionPane.showMessageDialog(null, "OperaciÃ³n Exitosa.");
        } catch (Exception e) {
        }
    }
    
    private void btnEnviarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarInformeActionPerformed
        
        if (guardarNuevo) {
            String opcion = "Enviado";
            guardarDatos(opcion);
            guardadoF = true;
        }
        else{
            actualizarDatos("Enviado");
            actualizaF = true;
        }
        
    }//GEN-LAST:event_btnEnviarInformeActionPerformed

    private void btnAceptarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarInformeActionPerformed
        ClsNegocioPortafolio negoPorta = new ClsNegocioPortafolio();
        ResultSet rs ;
        try {
            String estado = "Aprobado";
            negoPorta.ModificarEstadoPortafolio(IdPortafolio, estado);
            JOptionPane.showMessageDialog(null, IdPortafolio);
            JOptionPane.showMessageDialog(null, codDocente);
            negoPorta.ModificarRececpcionadoPorPortafolio(IdPortafolio, codDocente);
            negoPorta.cst.close();
            negoPorta.conexion.close();
            JOptionPane.showMessageDialog(null, "El Informe se Aprobo con exito");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAceptarInformeActionPerformed

    private void btnRechazarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechazarInformeActionPerformed
        ClsNegocioPortafolio negoPorta = new ClsNegocioPortafolio();
        ResultSet rs ;
        try {
            String estado = "Observado";
            negoPorta.ModificarEstadoPortafolio(IdPortafolio, estado);            
            negoPorta.cst.close();
            negoPorta.conexion.close();
            JOptionPane.showMessageDialog(null, "El Informe se rechazÃ³ con exito");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnRechazarInformeActionPerformed

    private void btnCancelarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarInformeActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarInformeActionPerformed

    private void tablaEstudianteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEstudianteMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaEstudianteMousePressed

    private void btnAgregarFilaEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFilaEstudianteActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tablaEstudiante.getModel();
        
        if (tablaEstudiante.getSelectedRow() == -1) {
            modelo.addRow(new Object[]{"", Boolean.FALSE,Boolean.FALSE,0});
        } else {
            modelo.insertRow(tablaEstudiante.getSelectedRow()+1, new Object[]{" - ", Boolean.FALSE,Boolean.FALSE,0});
        }
    }//GEN-LAST:event_btnAgregarFilaEstudianteActionPerformed

    private void btnRemoverFilaEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverFilaEstudianteActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tablaEstudiante.getModel();
        if (tablaEstudiante.getSelectedRow()!= -1) {
            modelo.removeRow(tablaEstudiante.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Â¡Seleccione una fila!");
        }
    }//GEN-LAST:event_btnRemoverFilaEstudianteActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        cargarDatos();
        if (nivelUsuario.equals("Usuario")) {
            btnAceptarInforme.setVisible(false);
            btnRechazarInforme.setVisible(false);
        }
        obtenerIdCargaAcademica();
    }//GEN-LAST:event_formInternalFrameOpened

    private void guardarDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarDetallesActionPerformed
        if (cabeceraGuardada) {
            if (tablaDocente.getRowCount() > 0) {
                agregarCapacidades();                
            }
            else{
                JOptionPane.showMessageDialog(null, "inserta datos en la Tabla");
            }
        }
        else if(actualizaF){
            if (tablaEstudiante.getRowCount() > 0) {
                actualizarMaterialDocente();                
            }
            else{
                JOptionPane.showMessageDialog(null, "inserta datos en la Tabla");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Guarde el Informe Principal antes.");
        }
    }//GEN-LAST:event_guardarDetallesActionPerformed
    
    private void actualizarMaterialDocente(){
        int filas = tablaDocente.getRowCount();
        int filas2 = tablaEstudiante.getRowCount();
        
        try {
            ClsEntidadPortafolioMaterialDocente entiMaterialDocente = new ClsEntidadPortafolioMaterialDocente();
            ClsNegocioPortafolioMaterialDocente negoMaterialDocente =  new ClsNegocioPortafolioMaterialDocente();
            
            ClsEntidadPortafolioMaterialEstudiante entiMaterialEstudiante = new ClsEntidadPortafolioMaterialEstudiante();
            ClsNegocioPortafolioMaterialEstudiante negoMaterialEstudiante =  new ClsNegocioPortafolioMaterialEstudiante();
            
            ArrayList<String> idinfo = negoMaterialDocente.obtenerInfoFinalDocente(codDocente,datoIFC[0]);
            String id[] = idinfo.toArray(new String[idinfo.size()]);
            
            negoMaterialDocente.EliminarDetallePortafolioMaterialDocente(id[0]);
            negoMaterialEstudiante.EliminarDetallePortafolioMaterialEstudiante(id[0]);
            
            for (int i = 0; i < filas; i++) {
                entiMaterialDocente.setIdPortafolio(Integer.parseInt(id[0]));
                entiMaterialDocente.setMaterial((String) tablaDocente.getValueAt(i, 0));
                entiMaterialDocente.setDigital((boolean) tablaDocente.getValueAt(i, 1));
                entiMaterialDocente.setImpreso((boolean) tablaDocente.getValueAt(i, 2));
                entiMaterialDocente.setCantidad((int) tablaDocente.getValueAt(i, 3));
                negoMaterialDocente.AgregarDetallePortafolioMaterialDocente(entiMaterialDocente);
            }
            
            negoMaterialDocente.cst.close();
            negoMaterialDocente.conexion.close();
            
            for (int i = 0; i < filas2; i++) {
                entiMaterialEstudiante.setIdPortafolio(Integer.parseInt(id[0]));
                entiMaterialEstudiante.setMaterial((String) tablaEstudiante.getValueAt(i, 0));
                entiMaterialEstudiante.setDigital((boolean) tablaEstudiante.getValueAt(i, 1));
                entiMaterialEstudiante.setImpreso((boolean) tablaEstudiante.getValueAt(i, 2));
                entiMaterialEstudiante.setCantidad((int) tablaEstudiante.getValueAt(i, 3));
                negoMaterialEstudiante.AgregarDetallePortafolioMaterialEstudiante(entiMaterialEstudiante);
            }
            
            negoMaterialEstudiante.cst.close();
            negoMaterialEstudiante.conexion.close();
            
            JOptionPane.showMessageDialog(null, "Guardado con exito.");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "mensaje: "+e.getMessage());
        }
    }
    
    private void btnCancelarInforme1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarInforme1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarInforme1ActionPerformed

    private void btnCalcularPorcentajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularPorcentajesActionPerformed

        if (!txtNumMatriculados.getText().equals("")) {
            double matriculados = Double.parseDouble(txtNumMatriculados.getText());
            double porcentajeTotal = 0.0;
            if (matriculados >= 1) {
                porcentajeTotal = ((matriculados / matriculados) *100);
                txtPorcenMatriculados.setText(""+porcentajeTotal);
            }
            else{
                txtPorcenMatriculados.setText("0");
            }
            if (!txtNumRetirados.getText().equals("") && !txtNumAbandono.getText().equals("") &&
                !txtNumAsisten.getText().equals("") && !txtNumAprobados.getText().equals("") &&
                !txtNumDesaprobados.getText().equals("")) {

                double retirados = Double.parseDouble(txtNumRetirados.getText());
                double abandono = Double.parseDouble(txtNumAbandono.getText());
                double asisten = Double.parseDouble(txtNumAsisten.getText());
                double aprobados = Double.parseDouble(txtNumAprobados.getText());
                double desaprobados = Double.parseDouble(txtNumDesaprobados.getText());

                if (!(asisten > matriculados || asisten < 0)) {
                    if ((aprobados + desaprobados) <= asisten && (aprobados + desaprobados) > 0 && aprobados >= 0 && desaprobados >= 0) {
                        DecimalFormat df = new DecimalFormat("#0.0");

                        txtPorcenRetirados.setText( ""+(retirados * porcentajeTotal)/matriculados);
                        txtPorcenAbandono.setText( ""+(abandono * porcentajeTotal)/matriculados);
                        txtPorcenAsisten.setText( ""+(asisten * porcentajeTotal)/matriculados);
                        double asis = Double.parseDouble(txtPorcenAsisten.getText());
                        txtPorcenAsisten.setText( ""+df.format((asisten * porcentajeTotal)/matriculados));

                        //                        double porcentajeAsisten = asis;
                        //                        df.format(porcentajeAsisten);
                        txtPorcenAprobados.setText(df.format((aprobados * asis)/asisten));
                        txtPorcenDesaprobados.setText(df.format((desaprobados * asis)/asisten));

                        calculadoPorcentajes = true;
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Cantidad de aprobados y desaprobados no coinciden");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Alumnos Asistentes mayores a los Matriculados");
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "Faltan Datos.");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Numero de Matriculados NULO");
        }
    }//GEN-LAST:event_btnCalcularPorcentajesActionPerformed
    
    void obtenerIdCargaAcademica(){
        try {
            //Instanciar la clase NegocioUsuario
            ClsNegocioUsuario docente = new ClsNegocioUsuario();
            
            //Obtiene el resultado de la consulta hecha a la BD
            ResultSet rsDocente = docente.obtenerDatosPruebaEntrada(datoIFC[7], datoIFC[0]);
            
            //itera los valores hechas en la consulta
            while (rsDocente.next()) {
                //llenar los valores con los valores respectivos
                lblSemestre.setText("PORTAFOLIO " + rsDocente.getString(7));
                
                idCargaAcademica = rsDocente.getString(8);
            }
            docente.conexion.close();
        } catch (Exception e) {
        }
    }
    private void agregarFila(){
        DefaultTableModel modelo = (DefaultTableModel) tablaDocente.getModel();
        
        if (tablaDocente.getSelectedRow() == -1) {
            modelo.addRow(new Object[]{"", Boolean.FALSE,Boolean.FALSE,0});
        } else {
            modelo.insertRow(tablaDocente.getSelectedRow()+1, new Object[]{" - ", Boolean.FALSE,Boolean.FALSE,0});
        }
    }
    
    private void removerFila(){
        DefaultTableModel modelo = (DefaultTableModel) tablaDocente.getModel();
        if (tablaDocente.getSelectedRow()!= -1) {
            modelo.removeRow(tablaDocente.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Â¡Seleccione una fila!");
        }
        
    }
    
    private void cargarDatos(){
        if (guardarNuevo) {
            txtCodigoCurso.setText(datoIFC[0]);
            txtNombreCurso.setText(datoIFC[1]);

            
            txtNumMatriculados.setText(datoIFC[4]);
            txtNumRetirados.setText(datoIFC[5]);
            txtNumAbandono.setText(datoIFC[6]); 

            String codigoDcoente = datoIFC[7];

            txtDocente.setText(datoIFC[8]);            
        }
        else{
            txtCodigoCurso.setText(datoIFC[0]);
            txtNombreCurso.setText(datoIFC[1]);                       
                       
            txtDocente.setText(datoIFC[2]);        
            
            txtNumMatriculados.setText(datoIFC[3]);
            txtNumRetirados.setText(datoIFC[4]);
            txtNumAbandono.setText(datoIFC[5]);
            txtNumAsisten.setText(datoIFC[6]);
            txtNumAprobados.setText(datoIFC[7]);
            txtNumDesaprobados.setText(datoIFC[8]);
            txtRevisadoPor.setText(datoIFC[9]);
            cargarDatosTablaDocenteActualizar();
            cargarDatosTablaEstudianteActualizar();
//            cargarDatosObservaciones();
        }
        
    }
    
    private void cargarDatosTablaEstudianteActualizar(){
        
        DefaultTableModel modelo = (DefaultTableModel) tablaEstudiante.getModel();
        
        int filas = modelo.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
        
        ClsNegocioPortafolioMaterialEstudiante detalleInfoFinal = new ClsNegocioPortafolioMaterialEstudiante();
        
        ArrayList<ClsEntidadPortafolioMaterialEstudiante> detalle = detalleInfoFinal.seleccionarPortafolioMaterialEstudiante(IdPortafolio);        
        Iterator iterator = detalle.iterator();

        Object campo[] = new Object[4];
        
        

        while (iterator.hasNext()) {            
            ClsEntidadPortafolioMaterialEstudiante objDetalle;
            objDetalle = (ClsEntidadPortafolioMaterialEstudiante) iterator.next();


            campo[0] = String.valueOf(objDetalle.getMaterial());
            if(objDetalle.isDigital()){
                campo[1] = Boolean.TRUE;
            }else{
                campo[1] = Boolean.FALSE;
            }
            if(objDetalle.isImpreso()){
                campo[2] = Boolean.TRUE;
            }else{
                campo[2] = Boolean.FALSE;
            }
            campo[3] = objDetalle.getCantidad();

            modelo.addRow(campo);
        }
        try {
            detalleInfoFinal.conexion.close();
        } catch (SQLException ex) {
            Logger.getLogger(FrmPortafolio.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablaEstudiante.setModel(modelo);
    
    }
    
    private void cargarDatosTablaDocenteActualizar(){
        
        DefaultTableModel modelo = (DefaultTableModel) tablaDocente.getModel();
        
        int filas = modelo.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
        
        ClsNegocioPortafolioMaterialDocente detalleInfoFinal = new ClsNegocioPortafolioMaterialDocente();
        
        ArrayList<ClsEntidadPortafolioMaterialDocente> detalle = detalleInfoFinal.seleccionarPortafolioMaterialDocente(IdPortafolio);        
        Iterator iterator = detalle.iterator();

        Object campo[] = new Object[4];
        
        

        while (iterator.hasNext()) {            
            ClsEntidadPortafolioMaterialDocente objDetalle;
            objDetalle = (ClsEntidadPortafolioMaterialDocente) iterator.next();


            campo[0] = String.valueOf(objDetalle.getMaterial());
            if(objDetalle.isDigital()){
                campo[1] = Boolean.TRUE;
            }else{
                campo[1] = Boolean.FALSE;
            }
            if(objDetalle.isImpreso()){
                campo[2] = Boolean.TRUE;
            }else{
                campo[2] = Boolean.FALSE;
            }
            campo[3] = objDetalle.getCantidad();

            modelo.addRow(campo);
        }
        try {
            detalleInfoFinal.conexion.close();
        } catch (SQLException ex) {
            Logger.getLogger(FrmPortafolio.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablaDocente.setModel(modelo);
    
    }
    
    
    
    private void guardarDatos(String opcion){
        
        ClsEntidadPortafolio entiPortafolio = new ClsEntidadPortafolio();
        ClsNegocioPortafolio negPortafolio = new ClsNegocioPortafolio();
            
            
        try {
            entiPortafolio.setIdCargaAcademica(Integer.parseInt(idCargaAcademica));
            entiPortafolio.setEstadoPortafolio(opcion);
            entiPortafolio.setEstudianteAsisten(Integer.parseInt(txtNumAsisten.getText()));
            entiPortafolio.setEstudianteAprobado(Integer.parseInt(txtNumAprobados.getText()));
            entiPortafolio.setEstudianteDesaprobado(Integer.parseInt(txtNumAbandono.getText()));
            entiPortafolio.setRecepcioadoPor(txtRevisadoPor.getText());
                        
            negPortafolio.AgregarPortafolio(entiPortafolio);
            negPortafolio.cst.close();
            negPortafolio.conexion.close();
            JOptionPane.showMessageDialog(null, "OperaciÃ³n Exitosa.");
        } catch (Exception e) {
        }
    }
    
    private void agregarCapacidades() {
        int filas = tablaDocente.getRowCount();
        int filas2 = tablaEstudiante.getRowCount();
        try {
            ClsEntidadPortafolioMaterialDocente entiMaterialDocente = new ClsEntidadPortafolioMaterialDocente();
            ClsNegocioPortafolioMaterialDocente negoMaterialDocente =  new ClsNegocioPortafolioMaterialDocente();
            
            ClsEntidadPortafolioMaterialEstudiante entiMaterialEstudiante = new ClsEntidadPortafolioMaterialEstudiante();
            ClsNegocioPortafolioMaterialEstudiante negoMaterialEstudiante =  new ClsNegocioPortafolioMaterialEstudiante();
            
            ArrayList<String> idinfo = negoMaterialDocente.obtenerInfoFinalDocente(codDocente,datoIFC[0]);
            String id[] = idinfo.toArray(new String[idinfo.size()]);
            
            for (int i = 0; i < filas; i++) {
                entiMaterialDocente.setIdPortafolio(Integer.parseInt(id[0]));
                entiMaterialDocente.setMaterial((String) tablaDocente.getValueAt(i, 0));
                entiMaterialDocente.setDigital((boolean) tablaDocente.getValueAt(i, 1));
                entiMaterialDocente.setImpreso((boolean) tablaDocente.getValueAt(i, 2));
                entiMaterialDocente.setCantidad((int) tablaDocente.getValueAt(i, 3));
                negoMaterialDocente.AgregarDetallePortafolioMaterialDocente(entiMaterialDocente);
            }
            
            negoMaterialDocente.cst.close();
            negoMaterialDocente.conexion.close();
            
            for (int i = 0; i < filas2; i++) {
                entiMaterialEstudiante.setIdPortafolio(Integer.parseInt(id[0]));
                entiMaterialEstudiante.setMaterial((String) tablaEstudiante.getValueAt(i, 0));
                entiMaterialEstudiante.setDigital((boolean) tablaEstudiante.getValueAt(i, 1));
                entiMaterialEstudiante.setImpreso((boolean) tablaEstudiante.getValueAt(i, 2));
                entiMaterialEstudiante.setCantidad((int) tablaEstudiante.getValueAt(i, 3));
                negoMaterialEstudiante.AgregarDetallePortafolioMaterialEstudiante(entiMaterialEstudiante);
            }
            
            negoMaterialEstudiante.cst.close();
            negoMaterialEstudiante.conexion.close();
            
            
            JOptionPane.showMessageDialog(null, "Guardado con exito.");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "mensaje: "+e.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarInforme;
    private javax.swing.JButton btnAgregarFilaCapacidades;
    private javax.swing.JButton btnAgregarFilaEstudiante;
    private javax.swing.JButton btnCalcularPorcentajes;
    private javax.swing.JButton btnCancelarInforme;
    private javax.swing.JButton btnCancelarInforme1;
    private javax.swing.JButton btnEnviarInforme;
    private javax.swing.JButton btnGuardarInforme;
    private javax.swing.JButton btnRechazarInforme;
    private javax.swing.JButton btnRemoverFilaCapacidades;
    private javax.swing.JButton btnRemoverFilaEstudiante;
    private javax.swing.JButton guardarDetalles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblSemestre;
    private javax.swing.JTable tablaDocente;
    private javax.swing.JTable tablaEstudiante;
    private javax.swing.JTextField txtCodigoCurso;
    private javax.swing.JTextField txtDocente;
    private javax.swing.JTextField txtNombreCurso;
    private javax.swing.JTextField txtNumAbandono;
    private javax.swing.JTextField txtNumAprobados;
    private javax.swing.JTextField txtNumAsisten;
    private javax.swing.JTextField txtNumDesaprobados;
    private javax.swing.JTextField txtNumMatriculados;
    private javax.swing.JTextField txtNumRetirados;
    private javax.swing.JTextField txtPorcenAbandono;
    private javax.swing.JTextField txtPorcenAprobados;
    private javax.swing.JTextField txtPorcenAsisten;
    private javax.swing.JTextField txtPorcenDesaprobados;
    private javax.swing.JTextField txtPorcenMatriculados;
    private javax.swing.JTextField txtPorcenRetirados;
    private javax.swing.JTextField txtRevisadoPor;
    // End of variables declaration//GEN-END:variables
}
